# code: language=ansible

---
# tasks file for ansible-role-burpsuite

- name: Performs validations
  ansible.builtin.import_tasks: validations.yaml

- name: Import variables
  ansible.builtin.import_tasks: variables.yaml

- name: Lookup latest version data
  ansible.builtin.include_tasks: lookup-latest-version.yaml
  when: burpsuite_version == "latest"

- name: Include Debian tasks
  ansible.builtin.include_tasks: setup-debian.yaml

# Check previous installation
- name: Check for previous Burp Suite installation
  ansible.builtin.import_tasks: check-previous-install.yaml

# Install tasks
- name: Install Burp Suite
  ansible.builtin.include_tasks: install.yaml
  when: installed_version is not defined or installed_version != _burpsuite_installer_version

# Burp Suite extras
- name: Deploy extras
  ansible.builtin.import_tasks: deploy-extras.yaml

# Activate Burp Suite
- name: Activate Burp Suite and download CA public certificate
  ansible.builtin.command:
    cmd: "python3 autoburp.py --cacert-path '{{ burpsuite_cacert_path }}' {{ burpsuite_install_dir }}"
    chdir: "{{ burpsuite_extras_dir }}"
  environment:
    BURP_LICENSE_KEY: "{{ burpsuite_pro_license_key }}"
  async: 600
  register: autoburp
  changed_when: "'Terms and conditions accepted.' in autoburp.stdout or
    'License successfully installed and activated.' in autoburp.stdout or
    'Certificate downloaded/updated' in autoburp.stdout"
  become: true
  become_user: 'root'
  when: burpsuite_activate

# Create default user config
- name: User config
  ansible.builtin.import_tasks: user-config.yaml

- name: Create extensions directory
  ansible.builtin.file:
    path: "{{ extension_dir }}"
    state: directory
    mode: '755'
  become: true
  become_method: ansible.builtin.sudo

# - name: Generate user options from template
#   ansible.builtin.template:
#     src: "burp_user_options.json.j2"
#     dest: "{{ extension_dir }}/burp_user_options.json"
#     mode: '755'
#   become: true
#   become_method: ansible.builtin.sudo

# - name: Generate project options from template
#   ansible.builtin.template:
#     src: "burp_project_options.json.j2"
#     dest: "{{ extension_dir }}/burp_project_options.json"
#     mode: '755'
#   become: true
#   become_method: ansible.builtin.sudo

- name: BApp Extensions
  ansible.builtin.include_tasks: bapp_install.yaml
  loop: "{{ lookup('ansible.builtin.dict', bapp_extensions) }}"

# Available tags:
# 
# initial-config - performs all initial config, setup-share, incl. apt, add-pkgs, git, golang tags
# apt - perfors apt update, full-upgrade, and add-pkgs tag
# add-pkgs - install additional pkgs from main repo and configure vimrc for no mouse mode
# setup-share - setups up /share
# git - performs setup for /opt dir in .gitconfig
# golang - configures .bashrc for go vars
# external-pkgs - includes the following (each tool is also tagged):
  # metabigor
  # gau
  # croc
  # shosubgo
  # wordlistgen
  # trashcompactor
  # waybackurl
  # gf
  # asn
  # feroxbuster
  # ripgen
  # nuclei-templates
  # github-search
  # kiterunner
  # trufflehog
  # arjun
  # subscraper
  # xnlinkfinder

- name: Initial configuration
  block:
  - name: Run apt update 
    apt:
      update_cache: yes
      cache_valid_time: 600
    become: true
    tags:
      - apt

  - name: Update all default packages to their latest version
    apt:
      name: "*"
      state: latest
    become: true
    tags:
      - apt

  # TODO: Include version pinning
  - name: Install additional apps from repository
    apt:
      pkg:
        - amass
        - bash-completion
        - joplin
        - locate
        - python-is-python3
        - vim-nox
        - wafw00f
        - wfuzz
        - whatweb
    become: true
    tags:
      - apt
      - add-pkgs

  - name: Prep /opt
    block:
    - name: Chmod /opt
      file:
        path: /opt
        mode: '0777'
      become: true
    - name: Mark /opt as safe within git
      blockinfile:
        path: /home/vnc/.gitconfig
        block: |
          [safe]
            directory = /opt/*
        marker_begin: Safe OPT
        create: true
    tags:
      - git

  - name: Configure vimrc
    blockinfile:
      path: /home/vnc/.vimrc
      block: |
        runtime defaults.vim:
        set mouse=-a
      marker: '" {mark} ANSIBLE MANAGED BLOCK'
      create: true
    tags:
      - add-pkgs

  - name: Configure bashrc gopath  
    blockinfile:
      path: /home/vnc/.bashrc
      block: |
        export GOROOT=/usr/lib/go
        export GOPATH=$HOME/go
        export PATH=$HOME/.local/bin:$GOPATH/bin:$GOROOT/bin:$PATH
      marker_begin: GoLang
    tags:
      - golang
      - external-pkgs
      - metabigor
      - gau
      - croc
      - shosubgo
      - wordlistgen
      - trashcompactor
      - waybackurl
      - gf

  - name: Update locate database
    command: updatedb
    become: true
    tags:
      - add-pkgs
  tags:
  - initial-config

- name: Install third-party tools
  block:
  - name: Install ASN
    block:
      - name: Install ASN dependencies
        apt:
          pkg:
            - aha
            - bind9-host
            - curl
            - grepcidr
            - ipcalc
            - jq
            - mtr-tiny
            - ncat
            - nmap
            - whois
      - name: Curl ASN script
        get_url:
          url: https://raw.githubusercontent.com/nitefood/asn/master/asn
          dest: /usr/bin/asn
          mode: 0755
    become: true
    tags:
      - external-pkgs
      - asn
  - name: Install Feroxbuster
    block:
      - name: Apt install Feroxbuster
        apt:
          pkg: feroxbuster
      - name: Copy feroxbuster config 
        copy:
          dest: /etc/feroxbuster/ferox-config.toml
          src: feroxbuster/ferox-config.toml
          mode: 0644
    become: true
    tags:
      - external-pkgs
      - feroxbuster
  # TODO: Loop or Verbose?
  - name: Install golang packages
    block:
      - name: Install metabigor
        command: 
          cmd: '/usr/bin/go install github.com/j3ssie/metabigor@latest'
        tags:
        - metabigor
      - name: Install gau
        command: 
          cmd: '/usr/bin/go install github.com/lc/gau/v2/cmd/gau@latest'
        tags:
         - gau
      - name: Install croc
        command: 
          cmd: '/usr/bin/go install github.com/schollz/croc/v9@latest'
        tags:
        - croc
      - name: Install shosubgo
        command: 
          cmd: '/usr/bin/go install github.com/incogbyte/shosubgo@latest'
        tags:
        - shosubgo
      - name: Install wordlistgen
        command: 
          cmd: '/usr/bin/go install github.com/ameenmaali/wordlistgen@latest'
        tags:
        - wordlistgen
      - name: Install trashcompactor
        command: 
          cmd: '/usr/bin/go install github.com/michael1026/trashcompactor@latest'
        tags:
        - trashcompactor
      - name: Install and configure gf
        block:
          - name: Install waybackurl
            command: 
              cmd: '/usr/bin/go install github.com/tomnomnom/waybackurls@latest'
            tags:
            - waybackurl
          - name: Install gf
            block:
            - name: Install gf from repo
              command: 
                cmd: '/usr/bin/go install github.com/tomnomnom/gf@latest'
            - name: Clone 1ndianl33t GF repo
              git:
                repo: 'https://github.com/1ndianl33t/Gf-Patterns'
                dest: /tmp/Gf-Patterns
            - name: Create .gf directory
              file:
                path: /home/vnc/.gf
                state: directory
            - name: Move gf patterns to .gf
              block:
                - name: Find tomnomnom and 1ndianl33t patterns
                  find:
                    paths: [ "/home/vnc/go/pkg/mod/github.com/tomnomnom/", "/tmp/Gf-Patterns/" ]
                    recurse: yes
                    file_type: file
                    patterns: "*.json"
                  register: gf_json
                - debug: msg="{{gf_json}}"
                - name: Copy gf json files
                  copy:
                    remote_src: yes
                    src: "{{ item.path }}"
                    dest: "/home/vnc/.gf"                           
                  loop: "{{ gf_json.files}}"
          - name: Configure bashrc GF
            blockinfile:
              path: /home/vnc/.bashrc
              block: |
                source $HOME/go/pkg/mod/github.com/tomnomnom/gf*/gf-completion.bash
              marker_begin: GF
        tags:
          - external-pkgs
          - gf
  - name: Install ripgen
    block:
      - name: Install ripgen using cargo
        community.general.cargo:
          name: ripgen
      - name: Configure bashrc ripgen
        blockinfile:
          path: /home/vnc/.bashrc
          block: |
            export PATH="/home/vnc/.cargo/bin:$PATH"
          marker_begin: Ripgen
    tags:
      - external-pkgs
      - ripgen
  - name: Install git projects
    block:
    - name: git clone nuclei templates
      git: 
        repo: https://github.com/projectdiscovery/nuclei-templates
        dest: /opt/nuclei-templates
      tags:
      - nuclei-templates
    - name: Install github-search
      block:
      - name: git clone github-search
        git:
          repo: https://github.com/gwen001/github-search
          dest: /opt/github-search
      - name: Install github-search requirements
        pip:
          requirements: /opt/github-search/requirements.txt
          virtualenv: /opt/github-search/venv
      tags:
      - github-search

    - name: Install Kiterunner
      block:
        - name: git clone kiterunner
          git:
            repo: https://github.com/assetnote/kiterunner.git
            dest: /opt/kiterunner

        - name: Build Kiterunner
          make:
            chdir: /opt/kiterunner

        - name: Create Kiterunner symlink
          file:
            src: /opt/kiterunner/dist/kr
            dest: /usr/local/bin/kr
            state: link
          become: true
      tags:
      - kiterunner
    tags:
      - external-pkgs
  - name: Install Trufflehog
    block:
      - name: Git clone Trufflehog
        git: 
          repo: https://github.com/trufflesecurity/trufflehog.git
          dest: /opt/trufflehog
      - name: Go install Trufflehog
        command: 
          cmd: '/usr/bin/go install'
          chdir: /opt/trufflehog
    tags:
      - external-pkgs
      - trufflehog
  - name: Install python packages
    block: 
      - name: Install Arjun
        pip:
          name: arjun
          #virtualenv: /opt/arjun/venv
        tags:
        - arjun
      - name: Install Subscraper
        pip:
          name: git+https://github.com/m8sec/subscraper
          #virtualenv: /opt/subscraper/venv
        tags:
        - subscraper
      - name: Install xnLinkFinder.py
        block:
        - name: pip install xnLinkFinder.py
          pip:
            name: git+https://github.com/xnl-h4ck3r/xnLinkFinder
            #virtualenv: /opt/xnLinkFinder/venv
        - name: Configure xnLinkFinder.py
          file:
            src: /home/vnc/.local/lib/python3.11/site-packages/xnLinkFinder.py
            dest: /home/vnc/.local/bin/xnLinkFinder.py
            mode: '0755'
            state: link
        tags:
        - xnlinkfinder
  - name: Install Burp Suite Pro
    include_tasks: burp_setup.yaml
    tags:
      - burp
  tags:
    - external-pkgs

- name: Setup fileshare
  block:
    - name: Make /share directory
      file:
        path: "/share"
        state: directory
        owner: root
        group: root
        mode: "0755"
      become: true
    - name: Get fstab line
      local_action: shell grep share /etc/fstab
      register: mount_share
    - name: Show grep results
      debug:
        msg: "Line from fstab is {{ mount_share.stdout }}"
    - name: Append to /etc/fstab
      lineinfile:
        dest: /etc/fstab
        backup: yes
        line: "{{ mount_share.stdout }}"
        insertafter: EOF
        create: true
      become: true
    - name: Mount /share
      shell: mount /share
      become: true
  tags:
    - initial-config
    - setup-share
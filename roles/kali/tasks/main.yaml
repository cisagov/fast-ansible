## Available tags:
## apt config git pkg-install asn feroxbuster golang gf trufflehog python burp setup-share

- name: Run apt update 
  apt:
    update_cache: yes
    cache_valid_time: 600
  become: true
  tags:
    - apt
    - config

- name: Update all packages to their latest version
  apt:
    name: "*"
    state: latest
  become: true
  tags:
    - apt
    - config

- name: Prep /opt
  block:
  - name: Chmod /opt
    file:
      path: /opt
      mode: '0777'
    become: true
  - name: Mark /opt as safe within git
    blockinfile:
      path: /home/vnc/.gitconfig
      block: |
        [safe]
          directory = /opt/*
      marker_begin: Safe OPT
      create: true
  tags:
    - config
    - git

- name: Install ASN
  block:
    - name: Install ASN dependencies
      apt:
        pkg:
          - aha
          - bind9-host
          - curl
          - grepcidr
          - ipcalc
          - jq
          - mtr-tiny
          - ncat
          - nmap
          - whois
    - name: Curl ASN script
      get_url:
        url: https://raw.githubusercontent.com/nitefood/asn/master/asn
        dest: /usr/bin/asn
        mode: 0755
  become: true
  tags:
    - pkg-install
    - asn

- name: Install Feroxbuster
  block:
    - name: Apt install Feroxbuster
      apt:
        pkg: feroxbuster
    - name: Copy feroxbuster config 
      copy:
        dest: /etc/feroxbuster/ferox-config.toml
        src: feroxbuster/ferox-config.toml
        mode: 0644
  become: true
  tags:
    - pkg-install
    - feroxbuster

# TODO: Loop or Verbose?
- name: Install GoLang packages
  block:
    - name: Go install Metabigor
      command: 
        cmd: '/usr/bin/go install github.com/j3ssie/metabigor@latest'
    - name: Go install Gau
      command: 
        cmd: '/usr/bin/go install github.com/lc/gau/v2/cmd/gau@latest'
    - name: Go install Croc
      command: 
        cmd: '/usr/bin/go install github.com/schollz/croc/v9@latest'
    - name: Go install Shosubgo
      command: 
        cmd: '/usr/bin/go install github.com/incogbyte/shosubgo@latest'
    - name: Go install Wordlistgen
      command: 
        cmd: '/usr/bin/go install github.com/ameenmaali/wordlistgen@latest'
    - name: Go install Trashcompactor
      command: 
        cmd: '/usr/bin/go install github.com/michael1026/trashcompactor@latest'
  tags:
    - pkg-install
    - golang

- name: Install and configure GF
  block:
    - name: Go install Waybackurl
      command: 
        cmd: '/usr/bin/go install github.com/tomnomnom/waybackurls@latest'
    - name: Go install GF
      command: 
        cmd: '/usr/bin/go install github.com/tomnomnom/gf@latest'        
    - name: Clone 1ndianl33t GF repo
      git:
        repo: 'https://github.com/1ndianl33t/Gf-Patterns'
        dest: /tmp/Gf-Patterns
    - name: Create GF directory
      file:
        path: /home/vnc/.gf
        state: directory
    - name: Move Gf patterns
      block:
        - name: Find tomnomnom and 1ndianl33t patterns
          find:
            paths: [ "/home/vnc/go/pkg/mod/github.com/tomnomnom/", "/tmp/Gf-Patterns/" ]
            recurse: yes
            file_type: file
            patterns: "*.json"
          register: gf_json
        - debug: msg="{{gf_json}}"
        - name: Copy gf json files
          copy:
            remote_src: yes
            src: "{{ item.path }}"
            dest: "/home/vnc/.gf"                           
          loop: "{{ gf_json.files}}"
    - name: Configure bashrc GF
      blockinfile:
        path: /home/vnc/.bashrc
        block: |
          source $HOME/go/pkg/mod/github.com/tomnomnom/gf*/gf-completion.bash
        marker_begin: GF
  tags:
    - pkg-install
    - gf

- name: Install ripgen
  block:
    - name: Install ripgen using cargo
      community.general.cargo:
        name: ripgen
    - name: Configure bashrc ripgen
      blockinfile:
        path: /home/vnc/.bashrc
        block: |
          export PATH="/home/vnc/.cargo/bin:$PATH"
        marker_begin: Ripgen
  tags:
    - pkg-install
    - ripgen

- name: Configure bashrc gopath  
  blockinfile:
    path: /home/vnc/.bashrc
    block: |
      export GOROOT=/usr/lib/go
      export GOPATH=$HOME/go
      export PATH=$HOME/.local/bin:$GOPATH/bin:$GOROOT/bin:$PATH
    marker_begin: GoLang
  tags:
    - config
    - golang
      
- name: Install git projects
  block:
  - name: Git clone nuclei templates
    git: 
      repo: https://github.com/projectdiscovery/nuclei-templates
      dest: /opt/nuclei-templates
  - name: Git clone Github-Search
    git:
      repo: https://github.com/gwen001/github-search
      dest: /opt/github-search
  - name: Install Github-Search requirements
    pip:
      requirements: /opt/github-search/requirements.txt
      virtualenv: /opt/github-search/venv
  - name: Git clone Kiterunner
    git:
      repo: https://github.com/assetnote/kiterunner.git
      dest: /opt/kiterunner
  - name: Build Kiterunner
    make:
      chdir: /opt/kiterunner
  - name: Create Kiterunner symlink
    file:
      src: /opt/kiterunner/dist/kr
      dest: /usr/local/bin/kr
      state: link
    become: true
  tags:
    - pkg-install
    - git

- name: Install Trufflehog
  block:
    - name: Git clone Trufflehog
      git: 
        repo: https://github.com/trufflesecurity/trufflehog.git
        dest: /opt/trufflehog
    - name: Go install Trufflehog
      command: 
        cmd: '/usr/bin/go install'
        chdir: /opt/trufflehog
  tags:
    - pkg-install
    - git
    - trufflehog


- name: Install python packages
  block: 
    - name: Install Arjun
      pip:
        name: arjun
        #virtualenv: /opt/arjun/venv
    - name: Install Subscraper
      pip:
        name: git+https://github.com/m8sec/subscraper
        #virtualenv: /opt/subscraper/venv
    - name: Install xnLinkFinder.py
      pip:
        name: git+https://github.com/xnl-h4ck3r/xnLinkFinder
        #virtualenv: /opt/xnLinkFinder/venv
    - name: Configure xnLinkFinder.py
      file:
        src: /home/vnc/.local/lib/python3.11/site-packages/xnLinkFinder.py
        dest: /home/vnc/.local/bin/xnLinkFinder.py
        mode: '0755'
        state: link
  tags:
    - python
    - pkg-install

- name: Configure vimrc
  blockinfile:
    path: /home/vnc/.vimrc
    block: |
      runtime defaults.vim:
      set mouse=a
    marker: '" {mark} ANSIBLE MANAGED BLOCK'
    create: true
  tags:
    - config

# TODO: Include version pinning
- name: Install default apps
  apt:
    pkg:
      - amass
      - bash-completion
      - joplin
      - locate
      - python-is-python3
      - vim-nox
      - wafw00f
      - wfuzz
      - whatweb
  become: true
  tags:
    - pkg-install

- name: Update locate database
  command: updatedb
  become: true
  tags:
    - pkg-install

- name: Setup Burp
  include_tasks: burp_setup.yaml
  tags:
    - burp

- name: Set up /share
  block:
    - name: Make /share directory
      file:
        path: "/share"
        state: directory
        owner: root
        group: root
        mode: "0755"
      become: true
    - name: Get fstab line
      local_action: shell grep share /etc/fstab
      register: mount_share
    - name: Show grep results
      debug:
        msg: "Line from fstab is {{ mount_share.stdout }}"
    - name: Append to /etc/fstab
      lineinfile:
        dest: /etc/fstab
        backup: yes
        line: "{{ mount_share.stdout }}"
        insertafter: EOF
        create: true
      become: true
    - name: Mount /share
      shell: mount /share
      become: true
  tags:
    - config
    - setup-share